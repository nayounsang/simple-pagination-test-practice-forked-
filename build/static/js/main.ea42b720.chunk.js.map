{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","_ref","totalItems","itemsPerPage","pageNumberTestId","pageNumbers","i","Math","ceil","push","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","renderPageNumbers","map","number","_jsx","children","className","undefined","_jsxs","href","onClick","length","rootElement","document","getElementById","render"],"mappings":"iNAGe,SAASA,EAAGC,GAWzB,IAHE,IAPFC,EAAUD,EAAVC,WACAC,EAAYF,EAAZE,aACAC,EAAgBH,EAAhBG,iBAMMC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAaC,GAAeG,IACzDD,EAAYI,KAAKH,GAGnB,IAAAI,EAAsCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA1CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAkB5BI,EAAoBX,EAAYY,KAAI,SAACC,GACzC,OACEC,cAAA,MAAAC,SACED,cAAA,QACE,cAAaf,EACbiB,UAAWP,IAAgBI,EAAS,cAAWI,EAAUF,SAExDF,KALIA,EASb,IAEA,OACEC,cAAA,OAAAC,SACEG,eAAA,MAAIF,UAAU,aAAYD,SAAA,CACxBD,cAAA,MAAAC,SACED,cAAA,KACEK,KAAK,IACLC,QA/Bc,WAClBX,EAAc,GAChBC,EAAeD,EAAc,EAEjC,EA4BUO,UAA2B,IAAhBP,EAAoB,gBAAaQ,EAAUF,SACvD,eAIFJ,EACDG,cAAA,MAAAC,SACED,cAAA,KACEK,KAAK,IACLC,QAnCc,WAClBX,EAAcT,EAAYqB,QAC5BX,EAAeD,EAAc,EAEjC,EAgCUO,UACEP,IAAgBT,EAAYqB,OAAS,gBAAaJ,EACnDF,SACF,eAOX,CCxEA,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,iBAAOX,cAACnB,EAAG,CAACE,WAAY,EAAGC,aAAc,IAAOwB,E","file":"static/js/main.ea42b720.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App({\n  totalItems,\n  itemsPerPage,\n  pageNumberTestId,\n}: {\n  totalItems: number;\n  itemsPerPage: number;\n  pageNumberTestId?: string;\n}) {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleClick = (number: number) => {\n    setCurrentPage(number);\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (currentPage < pageNumbers.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const renderPageNumbers = pageNumbers.map((number) => {\n    return (\n      <li key={number}>\n        <span\n          data-testid={pageNumberTestId}\n          className={currentPage === number ? \"active\" : undefined}\n        >\n          {number}\n        </span>\n      </li>\n    );\n  });\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        <li>\n          <a\n            href=\"#\"\n            onClick={handlePrevClick}\n            className={currentPage === 1 ? \"disabled\" : undefined}\n          >\n            Previous\n          </a>\n        </li>\n        {renderPageNumbers}\n        <li>\n          <a\n            href=\"#\"\n            onClick={handleNextClick}\n            className={\n              currentPage === pageNumbers.length ? \"disabled\" : undefined\n            }\n          >\n            Next\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App totalItems={9} itemsPerPage={3} />, rootElement);\n"],"sourceRoot":""}